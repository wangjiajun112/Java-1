Java加强
JavaSE基础加强

异常、泛型、集合框架
异常 是程序出现的问题。
error: 代表系统级别的错误。
Exception：叫异常， 他代表的才是程序可能会出现的问题。
运行时异常， 编译阶段不会出现错误， 但是运行时会出现错误
编译时异常： 提醒程序员此处代码容易出错
异常的作用： 
① 定位程序的 bug
② 可以作为方法内部的一种特殊的返回值，以便通知上层调用者， 方法的执行问题

异常的作用： 

自定义异常：
Java无法为世界上全部的问题都提供异常类来代表， 如果企业自己的某种问题，
想通过异常来表示， 以便用异常来管理该问题， 那就要自己来定义异常类。

异常的处理方案： 
① 底层异常层层往上抛出， 最外层捕获异常， 记录下异常信息， 并响应适合用户观看的信息进行提示。
② 最外层捕获异常之后尝试修复

泛型 ： 定义类、接口、方法时， 同时声明了一个或者多个类型的变量
成为泛型类、泛型接口、 泛型方法， 他们统称为泛型。
public class ArrayList<E>{


}

作用： 泛型提供了在编译阶段所能操作的数据类型， 并自动进行检查的能力。
定义泛型类：
修饰符 calss 类名<类型变量， 类型变量， ...>{

}

泛型接口：
修饰符 interface 接口名<类型变量， 类型变量， ...> {


}

泛型方法、通配符、 上下限
① 泛型方法
修饰符 <类型变量， 类型变量， ...> 返回值类型 方法名(形参列表) {


}
public static <T> void test(T t){


}

通配符： 就是“？”， 可以在“使用泛型”的时候代表一切类型； E T K V是在定义泛型的时候使用。
泛型上限： ? extends Car
泛型下限: ? super Car

包装类： 就是把基本类型的数据包装成对象的类型。有自动装箱和自动拆箱的功能

包装类 还可以把基本数据类型的数据转成字节
Public static String toString(double d)
public String toString()

可以把字符串类型的数值转换成数值本身对象：
public static int parseint(String s)
public static Integer valueof(String s)

泛型支持的类型：
泛型不支持基本数据类型 ， 只能支持对象类型


集合是一种容器，用来装数据，类似于数组， 但集合的大小可变， 开发中也非常常用。
Collection集合特点：
List系列集合： 添加的元素是有序、可重置、有索引。

Set系列集合： 添加的元素是无序、不重复、无索引。

常用功能：
为什么要先学collection的常用方法？
Collection是单列集合的祖宗，它规定的方法是全部单列集合都会继承的。

Collection的遍历方式之一： 迭代器遍历
 Iterator<String> it = list.iterator();
之二： 增强for循环
for (元素类型 变量名 :集合对象) {

}
for(String s : list){
 sout.(s)
}

之三  lambda表达式
list.forEach(s -> sout.(s));

三种遍历方式的区别：


ArrayList：底层是基于数组存储数据的
数组查询速度快，但是增删数据效率低
LinkedList：底层是基于链表存储数据的

底层采用的数据结果不同， 应用场景不同









